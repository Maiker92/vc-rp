//By adri1 (vc-rp.es) 

#if defined _inc_components
	#endinput
#endif
#define _inc_components

#include <YSI\y_hooks>
#include <YSI\y_iterate>

/* paintjobs */
#define MAX_VEHICLE_PAINTJOBS 4
#define INVALID_PAINTJOB_ID 3
new VehiclePaintjob[MAX_VEHICLES] = {INVALID_PAINTJOB_ID, ...};
new VehiclePaintjobsInfo[][] = 
{
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {0, INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {0, 1, 2, INVALID_PAINTJOB_ID},
    {0, 1, 2, INVALID_PAINTJOB_ID},
    {0, 1, 2, INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {0, 1, 2, INVALID_PAINTJOB_ID},
    {0, 1, 2, INVALID_PAINTJOB_ID},
    {0, 1, 2, INVALID_PAINTJOB_ID},
    {0, 1, 2, INVALID_PAINTJOB_ID},
    {0, 1, 2, INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {0, 1, 2, INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {0, 1, 2, INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {0, 1, INVALID_PAINTJOB_ID},
    {0, 1, 2, INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID},
    {INVALID_PAINTJOB_ID}
};

/* vars */
#define INVALID_COMPONENT_ID -1
#define INVALID_VEHMODTYPE -1
#define MAX_VEHICLE_COMPONENTS 50
#define MAX_COMPONENTS_TYPES 19

new VehicleComponents[MAX_VEHICLES][MAX_COMPONENTS_TYPES],
    Iterator:VehicleComponents[MAX_VEHICLES]<MAX_COMPONENTS_TYPES>;

enum
{
    VEHMODTYPE_SPOILER,
    VEHMODTYPE_HOOD,
    VEHMODTYPE_ROOF,
    VEHMODTYPE_SIDESKIRT_RIGHT,
    VEHMODTYPE_SIDESKIRT_LEFT,
    VEHMODTYPE_LAMPS,
    VEHMODTYPE_NITRO,
    VEHMODTYPE_EXHAUST,
    VEHMODTYPE_WHEELS,
    VEHMODTYPE_STEREO,
    VEHMODTYPE_HYDRAULICS,
    VEHMODTYPE_FRONT_BUMPER,
    VEHMODTYPE_REAR_BUMPER,
    VEHMODTYPE_FRONT_BULLBAR,
    VEHMODTYPE_REAR_BULLBAR,
    VEHMODTYPE_VENT_RIGHT,
    VEHMODTYPE_VENT_LEFT,
    VEHMODTYPE_FRONT_SIGN,
    /* Custom */
    VEHMODTYPE_FIRE_EXHAUST
};

enum E_ComponentInfo
{
    component_NAME[32],
    component_PRICE,
    component_TYPE
};

new ComponentInfo[][E_ComponentInfo] =
{
    {"Pro", 400, VEHMODTYPE_SPOILER},
    {"Win", 550, VEHMODTYPE_SPOILER},
    {"Drag", 200, VEHMODTYPE_SPOILER},
    {"Alpha", 250, VEHMODTYPE_SPOILER},
    {"Champ Scoop", 100, VEHMODTYPE_HOOD},
    {"Fury Scoop", 150, VEHMODTYPE_HOOD},
    {"Scoop", 80, VEHMODTYPE_ROOF},
    {"Generic", 500, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"5x", 500, VEHMODTYPE_NITRO},
    {"2x", 200, VEHMODTYPE_NITRO},
    {"10x", 1000, VEHMODTYPE_NITRO},
    {"Race Scoop", 220, VEHMODTYPE_HOOD},
    {"Worx Scoop", 250, VEHMODTYPE_HOOD},
    {"Round Fog", 100, VEHMODTYPE_LAMPS},
    {"Champ", 400, VEHMODTYPE_SPOILER},
    {"Race", 500, VEHMODTYPE_SPOILER},
    {"Worx", 200, VEHMODTYPE_SPOILER},
    {"Generic", 500, VEHMODTYPE_SIDESKIRT_LEFT},
    {"Upswept", 350, VEHMODTYPE_EXHAUST},
    {"Twin", 300, VEHMODTYPE_EXHAUST},
    {"Large", 250, VEHMODTYPE_EXHAUST},
    {"Medium", 200, VEHMODTYPE_EXHAUST},
    {"Small", 150, VEHMODTYPE_EXHAUST},
    {"Fury", 350, VEHMODTYPE_SPOILER},
    {"Square Fog", 50, VEHMODTYPE_LAMPS},
    {"Offroad", 1000, VEHMODTYPE_WHEELS},
    {"Alien", 480, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Alien", 480, VEHMODTYPE_SIDESKIRT_LEFT},
    {"Alien", 770, VEHMODTYPE_EXHAUST},
    {"X-Flow", 680, VEHMODTYPE_EXHAUST},
    {"X-Flow", 370, VEHMODTYPE_SIDESKIRT_LEFT},
    {"X-Flow", 370, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Alien Vent", 170, VEHMODTYPE_ROOF},
    {"X-Flow Vent", 120, VEHMODTYPE_ROOF},
    {"Alien", 790, VEHMODTYPE_EXHAUST},
    {"X-Flow Vent", 150, VEHMODTYPE_ROOF},
    {"Alien", 500, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"X-Flow", 690, VEHMODTYPE_EXHAUST},
    {"Alien Vent", 190, VEHMODTYPE_ROOF},
    {"X-Flow", 390, VEHMODTYPE_SIDESKIRT_LEFT},
    {"Alien", 500, VEHMODTYPE_SIDESKIRT_LEFT},
    {"X-Flow", 390, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Chrome", 1000, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Slamin", 500, VEHMODTYPE_EXHAUST},
    {"Chrome", 500, VEHMODTYPE_EXHAUST},
    {"X-Flow", 510, VEHMODTYPE_EXHAUST},
    {"Alien", 710, VEHMODTYPE_EXHAUST},
    {"Alien", 670, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"X-Flow", 530, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Alien", 810, VEHMODTYPE_SPOILER},
    {"X-Flow", 620, VEHMODTYPE_SPOILER},
    {"Alien", 670, VEHMODTYPE_SIDESKIRT_LEFT},
    {"X-Flow", 530, VEHMODTYPE_SIDESKIRT_LEFT},
    {"X-Flow", 130, VEHMODTYPE_ROOF},
    {"Alien", 210, VEHMODTYPE_ROOF},
    {"Alien", 230, VEHMODTYPE_ROOF},
    {"Alien", 520, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"X-Flow", 430, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Alien", 620, VEHMODTYPE_SPOILER},
    {"X-Flow", 720, VEHMODTYPE_EXHAUST},
    {"X-Flow", 530, VEHMODTYPE_SPOILER},
    {"X-Flow", 180, VEHMODTYPE_ROOF},
    {"Alien", 550, VEHMODTYPE_SIDESKIRT_LEFT},
    {"X-Flow", 430, VEHMODTYPE_SIDESKIRT_LEFT},
    {"Alien", 830, VEHMODTYPE_EXHAUST},
    {"Alien", 850, VEHMODTYPE_EXHAUST},
    {"X-Flow", 750, VEHMODTYPE_EXHAUST},
    {"Alien", 250, VEHMODTYPE_ROOF},
    {"X-Flow", 200, VEHMODTYPE_ROOF},
    {"Alien", 550, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"X-Flow", 450, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Alien", 550, VEHMODTYPE_SIDESKIRT_LEFT},
    {"X-Flow", 450, VEHMODTYPE_SIDESKIRT_LEFT},
    {"Shadow", 1100, VEHMODTYPE_WHEELS},
    {"Mega", 1030, VEHMODTYPE_WHEELS},
    {"Rimshine", 980, VEHMODTYPE_WHEELS},
    {"Wires", 1560, VEHMODTYPE_WHEELS},
    {"Classic", 1620, VEHMODTYPE_WHEELS},
    {"Twist", 1200, VEHMODTYPE_WHEELS},
    {"Cutter", 1030, VEHMODTYPE_WHEELS},
    {"Switch", 900, VEHMODTYPE_WHEELS},
    {"Grove", 1230, VEHMODTYPE_WHEELS},
    {"Import", 820, VEHMODTYPE_WHEELS},
    {"Dollar", 1560, VEHMODTYPE_WHEELS},
    {"Trance", 1350, VEHMODTYPE_WHEELS},
    {"Atomic", 770, VEHMODTYPE_WHEELS},
    {"Stereo", 100, VEHMODTYPE_STEREO},
    {"Hydraulics", 1500, VEHMODTYPE_HYDRAULICS},
    {"Alien", 150, VEHMODTYPE_ROOF},
    {"X-Flow", 650, VEHMODTYPE_EXHAUST},
    {"Alien", 450, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"X-Flow", 100, VEHMODTYPE_ROOF},
    {"Alien", 750, VEHMODTYPE_EXHAUST},
    {"X-Flow", 350, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Alien", 450, VEHMODTYPE_SIDESKIRT_LEFT},
    {"X-Flow", 350, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Ahab", 1000, VEHMODTYPE_WHEELS},
    {"Virtual", 620, VEHMODTYPE_WHEELS},
    {"Access", 1140, VEHMODTYPE_WHEELS},
    {"Chrome", 1000, VEHMODTYPE_SIDESKIRT_LEFT},
    {"Chrome Grill", 940, VEHMODTYPE_FRONT_BULLBAR},
    {"Chrome Flames", 780, VEHMODTYPE_SIDESKIRT_LEFT},
    {"Chrome Strip", 830, VEHMODTYPE_SIDESKIRT_LEFT},
    {"Covertible", 3250, VEHMODTYPE_ROOF},
    {"Chrome", 1610, VEHMODTYPE_EXHAUST},
    {"Slamin", 1540, VEHMODTYPE_EXHAUST},
    {"Chrome Arches", 780, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Chrome Strip", 780, VEHMODTYPE_SIDESKIRT_LEFT},
    {"Chrome Strip", 780, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Chrome", 1610, VEHMODTYPE_REAR_BULLBAR},
    {"Slamin", 1540, VEHMODTYPE_REAR_BULLBAR},
    {"Little Sign", 0, VEHMODTYPE_FRONT_SIGN},
    {"Little Sign", 0, VEHMODTYPE_FRONT_SIGN},
    {"Chrome", 3340, VEHMODTYPE_EXHAUST},
    {"Slamin", 3250, VEHMODTYPE_EXHAUST},
    {"Chrome", 2130, VEHMODTYPE_FRONT_BULLBAR},
    {"Slamin", 2050, VEHMODTYPE_FRONT_BULLBAR},
    {"Chrome", 2040, VEHMODTYPE_FRONT_BUMPER},
    {"Chrome Trim", 780, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Wheelcovers", 940, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Chrome Trim", 780, VEHMODTYPE_SIDESKIRT_LEFT},
    {"Wheelcovers", 940, VEHMODTYPE_SIDESKIRT_LEFT},
    {"Chrome Flames", 780, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Chrome Bars", 860, VEHMODTYPE_FRONT_BULLBAR},
    {"Chrome Arches ", 780, VEHMODTYPE_SIDESKIRT_LEFT},
    {"Chrome Lights", 1120, VEHMODTYPE_FRONT_BULLBAR},
    {"Chrome", 3340, VEHMODTYPE_EXHAUST},
    {"Slamin", 3250, VEHMODTYPE_EXHAUST},
    {"Vinyl Hardtop", 3340, VEHMODTYPE_ROOF},
    {"Chrome", 1650, VEHMODTYPE_EXHAUST},
    {"Hardtop", 3380, VEHMODTYPE_ROOF},
    {"Softtop", 3290, VEHMODTYPE_ROOF},
    {"Slamin", 1590, VEHMODTYPE_EXHAUST},
    {"Chrome Strip", 830, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Chrome Strip", 800, VEHMODTYPE_SIDESKIRT_RIGHT},
    {"Slamin", 1500, VEHMODTYPE_EXHAUST},
    {"Chrome", 1000, VEHMODTYPE_EXHAUST},
    {"Chrome Strip", 800, VEHMODTYPE_SIDESKIRT_LEFT},
    {"Alien", 580, VEHMODTYPE_SPOILER},
    {"X-Flow", 470, VEHMODTYPE_SPOILER},
    {"X-Flow", 870, VEHMODTYPE_REAR_BUMPER},
    {"Alien", 980, VEHMODTYPE_REAR_BUMPER},
    {"Oval", 150, VEHMODTYPE_VENT_LEFT},
    {"Oval", 150, VEHMODTYPE_VENT_RIGHT},
    {"Square", 100, VEHMODTYPE_VENT_LEFT},
    {"Square", 100, VEHMODTYPE_VENT_RIGHT},
    {"X-Flow", 490, VEHMODTYPE_SPOILER},
    {"Alien", 600, VEHMODTYPE_SPOILER},
    {"X-Flow", 890, VEHMODTYPE_REAR_BUMPER},
    {"Alien", 1000, VEHMODTYPE_REAR_BUMPER},
    {"Alien", 1090, VEHMODTYPE_REAR_BUMPER},
    {"X-Flow", 840, VEHMODTYPE_REAR_BUMPER},
    {"X-Flow", 910, VEHMODTYPE_FRONT_BUMPER},
    {"Alien", 1200, VEHMODTYPE_FRONT_BUMPER},
    {"Alien", 1030, VEHMODTYPE_REAR_BUMPER},
    {"Alien", 1030, VEHMODTYPE_FRONT_BUMPER},
    {"X-Flow", 920, VEHMODTYPE_REAR_BUMPER},
    {"X-Flow", 930, VEHMODTYPE_FRONT_BUMPER},
    {"X-Flow", 550, VEHMODTYPE_SPOILER},
    {"Alien", 1050, VEHMODTYPE_REAR_BUMPER},
    {"Alien", 1050, VEHMODTYPE_FRONT_BUMPER},
    {"X-Flow", 950, VEHMODTYPE_REAR_BUMPER},
    {"Alien", 650, VEHMODTYPE_SPOILER},
    {"X-Flow", 450, VEHMODTYPE_SPOILER},
    {"Alien", 550, VEHMODTYPE_SPOILER},
    {"X-Flow", 850, VEHMODTYPE_FRONT_BUMPER},
    {"Alien", 950, VEHMODTYPE_FRONT_BUMPER},
    {"X-Flow", 850, VEHMODTYPE_REAR_BUMPER},
    {"Alien", 950, VEHMODTYPE_REAR_BUMPER},
    {"Alien", 970, VEHMODTYPE_FRONT_BUMPER},
    {"X-Flow", 880, VEHMODTYPE_FRONT_BUMPER},
    {"Alien", 990, VEHMODTYPE_FRONT_BUMPER},
    {"X-Flow", 900, VEHMODTYPE_FRONT_BUMPER},
    {"X-Flow", 950, VEHMODTYPE_FRONT_BUMPER},
    {"Chrome", 1000, VEHMODTYPE_FRONT_BUMPER},
    {"Slamin", 900, VEHMODTYPE_FRONT_BUMPER},
    {"Chrome", 1000, VEHMODTYPE_REAR_BUMPER},
    {"Slamin", 900, VEHMODTYPE_REAR_BUMPER},
    {"Slamin", 2050, VEHMODTYPE_REAR_BUMPER},
    {"Chrome", 2150, VEHMODTYPE_FRONT_BUMPER},
    {"Chrome", 2130, VEHMODTYPE_REAR_BUMPER},
    {"Slamin", 2050, VEHMODTYPE_FRONT_BUMPER},
    {"Chrome", 2130, VEHMODTYPE_FRONT_BUMPER},
    {"Slamin", 2040, VEHMODTYPE_REAR_BUMPER},
    {"Chrome", 2150, VEHMODTYPE_REAR_BUMPER},
    {"Slamin", 2040, VEHMODTYPE_FRONT_BUMPER},
    {"Slamin", 2095, VEHMODTYPE_REAR_BUMPER},
    {"Chrome", 2175, VEHMODTYPE_REAR_BUMPER},
    {"Slamin", 2080, VEHMODTYPE_FRONT_BUMPER},
    {"Chrome", 2200, VEHMODTYPE_FRONT_BUMPER},
    {"Slamin", 1200, VEHMODTYPE_FRONT_BUMPER},
    {"Chrome", 1040, VEHMODTYPE_FRONT_BUMPER},
    {"Chrome", 940, VEHMODTYPE_REAR_BUMPER},
    {"Slamin", 1100, VEHMODTYPE_REAR_BUMPER}, //1193
    /*  Custom  */
    {"Fire Exhaust", 1200, VEHMODTYPE_FIRE_EXHAUST} //1194
};

new VehicleComponentInfo[][] =
{
    {1008, 1009, 1010, 1013, 1018, 1019, 1020, 1021, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1000, 1002, 1007, 1008, 1009, 1010, 1013, 1016, 1017, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1000, 1001, 1008, 1009, 1010, 1014, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1001, 1003, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1001, 1003, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1002, 1006, 1008, 1009, 1010, 1016, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1001, 1003, 1004, 1005, 1008, 1009, 1010, 1019, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1000, 1008, 1009, 1010, 1014, 1016, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1019, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1001, 1003, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1021, 1022, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1001, 1003, 1007, 1008, 1009, 1010, 1013, 1017, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1004, 1005, 1008, 1009, 1010, 1012, 1013, 1020, 1021, 1022, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1000, 1002, 1004, 1005, 1006, 1008, 1009, 1010, 1013, 1016, 1018, 1019, 1020, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1003, 1007, 1008, 1009, 1010, 1014, 1017, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, INVALID_COMPONENT_ID},
    {1000, 1004, 1005, 1006, 1008, 1009, 1010, 1016, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1001, 1002, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1017, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1013, 1019, 1020, 1021, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1000, 1002, 1004, 1007, 1008, 1009, 1010, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1002, 1003, 1007, 1008, 1009, 1010, 1016, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, INVALID_COMPONENT_ID},
    {1001, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1018, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1001, 1007, 1008, 1009, 1010, 1014, 1015, 1017, 1018, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1001, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1100, 1101, 1106, 1122, 1123, 1124, 1125, 1126, 1127, 1178, 1179, 1180, 1185, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1109, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1103, 1104, 1105, 1107, 1108, 1128, 1181, 1182, 1183, 1184, 1194, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1001, 1004, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1014, 1015, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1144, 1145, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1001, 1002, 1004, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, INVALID_COMPONENT_ID},
    {1000, 1003, 1008, 1009, 1010, 1016, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1001, 1003, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1194, INVALID_COMPONENT_ID},
    {1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, INVALID_COMPONENT_ID},
    {1002, 1003, 1005, 1006, 1008, 1009, 1010, 1016, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1163, 1164, 1165, 1166, 1167, 1168, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1158, 1159, 1160, 1161, 1162, 1173, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1138, 1139, 1140, 1141, 1169, 1170, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1026, 1027, 1030, 1031, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1154, 1155, 1156, 1157, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1146, 1147, 1148, 1149, 1171, 1172, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1150, 1151, 1152, 1153, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1102, 1129, 1130, 1131, 1132, 1133, 1186, 1187, 1188, 1189, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1042, 1043, 1044, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1099, 1174, 1175, 1176, 1177, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1134, 1135, 1136, 1137, 1190, 1191, 1192, 1193, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1001, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1000, 1001, 1002, 1003, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1000, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1016, 1017, 1018, 1020, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1144, 1145, 1194, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1018, 1020, 1022, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1194, INVALID_COMPONENT_ID},
    {1001, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1194, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID},
    {1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, INVALID_COMPONENT_ID}
};

//Fire Exhaust
enum ENUM_FIRE_INFO
{
	bool:fire_VALID,
	bool:fire_MIRROR,
	Float:fire_OFFSET_X,
	Float:fire_OFFSET_Y,
	Float:fire_OFFSET_Z,
	Float:fire_ROT_X,
	Float:fire_ROT_Y,
	Float:fire_ROT_Z
};

new FIRE_INFO[][ENUM_FIRE_INFO] =
{
	{true, false, 0.356599, -2.323499, -2.282700, 0.000000, 0.000000, 180.000000}, //400
	{true, false, 0.438600, -2.509499, -2.088700, 0.000000, 0.000000, 180.000000}, //401
	{true, true, 0.502600, -2.623499, -2.136700, 0.000000, 0.000000, 180.000000}, //402
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //403
	{true, false, 0.452600, -2.679299, -2.057499, 0.000000, 0.000000, 180.000000}, //404
	{true, false, 0.484899, -2.694099, -2.203500, 0.000000, 0.000000, 180.000000}, //405
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //406
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //407
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //408
	{true, false, 0.613099, -3.776700, -2.107199, 0.000000, 0.000000, 180.000000}, //409
	{true, false, 0.393799, -2.313999, -2.057199, 0.000000, 0.000000, 180.000000}, //410
	{true, true, 0.307799, -2.537999, -2.083199, 0.000000, 0.000000, 180.000000}, //411
	{true, false, 0.427300, -3.339999, -2.165199, 0.000000, 0.000000, 180.000000}, //412
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //413
	{true, false, 0.516099, -3.160899, -2.317199, 0.000000, 0.000000, 180.000000}, //414
	{true, true, 0.378100, -2.368799, -2.103199, 0.000000, 0.000000, 180.000000}, //415
	{true, false, 0.504199, -3.720499, -2.407199, 0.000000, 0.000000, 180.000000}, //416
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //417
	{true, false, 0.574599, -2.647899, -2.439199, 0.000000, 0.000000, 180.000000}, //418
	{true, false, 0.558099, -2.929099, -2.161200, 0.000000, 0.000000, 180.000000}, //419
	{true, false, 0.574100, -2.639099, -2.137199, 0.000000, 0.000000, 180.000000}, //420
	{true, false, 0.450100, -2.983999, -2.191200, 0.000000, 0.000000, 180.000000}, //421
	{true, false, 0.411700, -2.547899, -2.334000, 0.000000, 0.000000, 180.000000}, //422
	{true, false, -0.369800, -2.315999, -2.404000, 0.000000, 0.000000, 180.000000}, //423
	{true, true, 0.512099, -1.669300, -1.856099, 0.000000, 0.000000, 180.000000}, //424
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //425
	{true, false, 0.578000, -2.621899, -2.136100, 0.000000, 0.000000, 180.000000}, //426
	{true, false, 0.601499, -3.878599, -2.324200, 0.000000, 0.000000, 180.000000}, //427
	{true, false, 0.588999, -2.971599, -2.462199, 0.000000, 0.000000, 180.000000}, //428
	{true, true, 0.503000, -2.523599, -1.965199, 0.000000, 0.000000, 180.000000}, //429
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //430
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //431
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //432
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //433
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //434
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //435
	{true, false, 0.486999, -2.497599, -2.099299, 0.000000, 0.000000, 180.000000}, //436
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //437
	{true, false, 0.490399, -2.705899, -2.371700, 0.000000, 0.000000, 180.000000}, //438
	{true, true, 0.352400, -2.581899, -2.064399, 0.000000, 0.000000, 180.000000}, //439
	{true, false, 0.420700, -2.677599, -2.570899, 0.000000, 0.000000, 180.000000}, //440
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //441
	{true, false, 0.593100, -2.798699, -2.205100, 0.000000, 0.000000, 180.000000}, //442
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //443
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //444
	{true, false, 0.480199, -2.714699, -2.147099, 0.000000, 0.000000, 180.000000}, //445
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //446
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //447
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //448
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //449
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //450
	{true, false, 0.005400, -2.552699, -1.987100, 0.000000, 0.000000, 180.000000}, //451
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //452
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //453
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //454
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //455
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //456
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //457
	{true, false, 0.519200, -2.790499, -2.229899, 0.000000, 0.000000, 180.000000}, //458
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //459
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //460
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //461
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //462
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //463
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //464
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //465
	{true, false, 0.435200, -2.877399, -2.125900, 0.000000, 0.000000, 180.000000}, //466
	{true, false, 0.481200, -2.917399, -2.097899, 0.000000, 0.000000, 180.000000}, //467
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //468
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //469
	{true, false, -1.250200, -2.029500, -0.472800, 0.000000, 0.000000, 180.000000}, //470
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //471
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //472
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //473
	{true, true, 0.584999, -2.822599, -2.209800, 0.000000, 0.000000, 180.000000}, //474
	{true, false, 0.481000, -2.595699, -2.113800, 0.000000, 0.000000, 180.000000}, //475
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //476
	{true, false, 0.587000, -2.805699, -2.071799, 0.000000, 0.000000, 180.000000}, //477
	{true, false, 0.416700, -2.568699, -2.196799, 0.000000, 0.000000, 180.000000}, //478
	{true, false, 0.460799, -2.865999, -2.082799, 0.000000, 0.000000, 180.000000}, //479
	{true, false, 0.483300, -2.409999, -2.163700, 0.000000, 0.000000, 180.000000}, //480
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //481
	{true, false, 0.445899, -2.641699, -2.439800, 0.000000, 0.000000, 180.000000}, //482
	{true, false, -0.340600, -2.846899, -2.512400, 0.000000, 0.000000, 180.000000}, //483
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //484
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //485
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //486
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //487
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //488
	{true, false, 0.446500, -2.771499, -2.240900, 0.000000, 0.000000, 180.000000}, //489
	{true, false, 0.439999, -3.227299, -2.240900, 0.000000, 0.000000, 180.000000}, //490
	{true, false, 0.572200, -2.925899, -2.166899, 0.000000, 0.000000, 180.000000}, //491
	{true, false, 0.579599, -2.606400, -2.116899, 0.000000, 0.000000, 180.000000}, //492
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //493
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //494
	{true, false, 0.596599, -2.335199, -2.332799, 0.000000, 0.000000, 180.000000}, //495
	{true, false, 0.545400, -2.173599, -2.111700, 0.000000, 0.000000, 180.000000}, //496
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //497
	{true, false, -0.473800, -3.108199, -2.361400, 0.000000, 0.000000, 180.000000}, //498
	{true, false, 0.516200, -3.340600, -2.287400, 0.000000, 0.000000, 180.000000}, //499
	{true, false, 0.446900, -1.940299, -2.245399, 0.000000, 0.000000, 180.000000}, //500
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //501
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //502
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //503
	{true, false, 0.430299, -2.876699, -2.117300, 0.000000, 0.000000, 180.000000}, //504
	{true, false, 0.446299, -2.772699, -2.236900, 0.000000, 0.000000, 180.000000}, //505
	{true, true, 0.560599, -2.476300, -2.120100, 0.000000, 0.000000, 180.000000}, //506
	{true, false, 0.485199, -2.971699, -2.262000, 0.000000, 0.000000, 180.000000}, //507
	{true, false, 0.467400, -3.586999, -2.686900, 0.000000, 0.000000, 180.000000}, //508
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //509
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //510
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //511
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //512
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //513
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //514
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //515
	{true, false, 0.447800, -2.946699, -2.141499, 0.000000, 0.000000, 180.000000}, //516
	{true, false, 0.501800, -2.858699, -2.119499, 0.000000, 0.000000, 180.000000}, //517
	{true, false, -0.423400, -2.882499, -2.091500, 0.000000, 0.000000, 180.000000}, //518
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //519
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //520
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //521
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //522
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //523
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //524
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //525
	{true, false, 0.481799, -2.314099, -2.129499, 0.000000, 0.000000, 180.000000}, //526
	{true, false, 0.471799, -2.298099, -1.999199, 0.000000, 0.000000, 180.000000}, //527
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //528
	{true, false, -0.424699, -2.729899, -2.011199, 0.000000, 0.000000, 180.000000}, //529
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //530
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //531
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //532
	{true, true, 0.515100, -2.452399, -2.037100, 0.000000, 0.000000, 180.000000}, //533
	{true, true, 0.483099, -2.958400, -2.167099, 0.000000, 0.000000, 180.000000}, //534
	{true, true, 0.350600, -2.693499, -2.189100, 0.000000, 0.000000, 180.000000}, //535
	{true, true, 0.500000, -2.971299, -2.161099, 0.000000, 0.000000, 180.000000}, //536
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //537
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //538
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //539
	{true, false, -0.410600, -2.748699, -2.265599, 0.000000, 0.000000, 180.000000}, //540
	{true, true, 0.624000, -2.205999, -1.875100, 0.000000, 0.000000, 180.000000}, //541
	{true, false, 0.587400, -2.829499, -1.996899, 0.000000, 0.000000, 180.000000}, //542
	{true, false, -0.411000, -2.764599, -2.099200, 0.000000, 0.000000, 180.000000}, //543
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //544
	{true, true, 0.314900, -2.263700, -2.260600, 0.000000, 0.000000, 180.000000}, //545
	{true, false, 0.581200, -2.833499, -2.020299, 0.000000, 0.000000, 180.000000}, //546
	{true, false, 0.629199, -2.589499, -2.074300, 0.000000, 0.000000, 180.000000}, //547
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //548
	{true, false, 0.441300, -2.511600, -2.030299, 0.000000, 0.000000, 180.000000}, //549
	{true, false, -0.628300, -2.899799, -2.267199, 0.000000, 0.000000, 180.000000}, //550
	{true, false, 0.590799, -3.145499, -2.092799, 0.000000, 0.000000, 180.000000}, //551
	{true, false, 0.446900, -3.063399, -1.924800, 0.000000, 0.000000, 180.000000}, //552
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //553
	{true, false, 0.559300, -2.751999, -2.208499, 0.000000, 0.000000, 180.000000}, //554
	{true, true, 0.136000, -2.282899, -2.003200, 0.000000, 0.000000, 180.000000}, //555
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //556
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //557
	{true, true, 0.465799, -2.558699, -1.977200, 0.000000, 0.000000, 180.000000}, //558
	{true, true, 0.633099, -2.394599, -1.977200, 0.000000, 0.000000, 180.000000}, //559
	{true, true, 0.479999, -2.474699, -1.991199, 0.000000, 0.000000, 180.000000}, //560
	{true, true, 0.446200, -2.739599, -2.166300, 0.000000, 0.000000, 180.000000}, //561
	{true, true, 0.483300, -2.380199, -2.037100, 0.000000, 0.000000, 180.000000}, //562
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //563
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //564
	{true, false, 0.479299, -2.134199, -1.999099, 0.000000, 0.000000, 180.000000}, //565
	{true, false, 0.564700, -2.946699, -2.063100, 0.000000, 0.000000, 180.000000}, //566
	{true, false, 0.628700, -2.776700, -2.252900, 0.000000, 0.000000, 180.000000}, //567
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //568
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //569
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //570
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //571
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //572
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //573
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //574
	{true, false, 0.453399, -2.709800, -1.975300, 0.000000, 0.000000, 180.000000}, //575
	{true, false, 0.658100, -3.092499, -2.043299, 0.000000, 0.000000, 180.000000}, //576
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //577
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //578
	{true, false, -0.424600, -2.890699, -2.102699, 0.000000, 0.000000, 180.000000}, //579
	{true, false, -0.408600, -2.872699, -2.092700, 0.000000, 0.000000, 180.000000}, //580
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //581
	{true, false, 0.444999, -3.395499, -2.334199, 0.000000, 0.000000, 180.000000}, //582
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //583
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //584
	{true, false, -0.428999, -3.143299, -1.889299, 0.000000, 0.000000, 180.000000}, //585
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //586
	{true, true, 0.698000, -2.692600, -2.056400, 0.000000, 0.000000, 180.000000}, //587
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //588
	{true, false, 0.583999, -2.358599, -1.965899, 0.000000, 0.000000, 180.000000}, //589
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //590
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //591
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //592
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //593
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //594
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //595
	{true, false, 0.577000, -2.622299, -2.138499, 0.000000, 0.000000, 180.000000}, //596
	{true, false, 0.577000, -2.622299, -2.138499, 0.000000, 0.000000, 180.000000}, //597
	{true, false, 0.595000, -2.678299, -2.002500, 0.000000, 0.000000, 180.000000}, //598
	{true, false, 0.440600, -2.773699, -2.239099, 0.000000, 0.000000, 180.000000}, //599
	{true, false, 0.442600, -2.763700, -2.054199, 0.000000, 0.000000, 180.000000}, //600
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //601
	{true, true, 0.560999, -2.523999, -2.200700, 0.000000, 0.000000, 180.000000}, //602
	{true, true, 0.587000, -2.661999, -2.192699, 0.000000, 0.000000, 180.000000}, //603
	{true, false, 0.425700, -2.877099, -2.124700, 0.000000, 0.000000, 180.000000}, //604
	{true, false, -0.411900, -2.767699, -2.098700, 0.000000, 0.000000, 180.000000}, //605
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //606
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //607
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //608
	{true, false, -0.477699, -3.106199, -2.359499, 0.000000, 0.000000, 180.000000}, //609
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //610
	{false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000} //611
};

new bool:VehicleFireEnabled[MAX_VEHICLES],
	PKeyFireTime[MAX_PLAYERS];

/* hooks */
hook OnPlayerConnect(playerid)
{
    PKeyFireTime[playerid] = 0;
    return 1;
}

hook OnScriptInit()
{
    Iter_Init(VehicleComponents);
    return 1;
}

stock mod_DestroyVehicle(vehicleid)
{
    VehiclePaintjob[vehicleid] = INVALID_PAINTJOB_ID;
    VehicleFireEnabled[vehicleid] = false;
    Iter_Clear(VehicleComponents[vehicleid]);
	return DestroyVehicle(vehicleid);
}

#if defined _ALS_DestroyVehicle
	#undef DestroyVehicle
#else
	#define _ALS_DestroyVehicle
#endif
#define DestroyVehicle mod_DestroyVehicle

stock mod_ChangeVehiclePaintjob(vehicleid, paintjobid)
{
    VehiclePaintjob[vehicleid] = paintjobid;
	return ChangeVehiclePaintjob(vehicleid, paintjobid);
}

#if defined _ALS_ChangeVehiclePaintjob
	#undef ChangeVehiclePaintjob
#else
	#define _ALS_ChangeVehiclePaintjob
#endif
#define ChangeVehiclePaintjob mod_ChangeVehiclePaintjob

/* functions */
stock IsVehModelPaintjobable(modelid)
{
    if(modelid >= 400 && modelid <= 611)
    {
        new index = modelid - 400;
        if(index >= 0 && index < sizeof(VehiclePaintjobsInfo))
        {
            if(VehiclePaintjobsInfo[index][0] != INVALID_PAINTJOB_ID)
            {
                return true;
            }
        }
    }
    return false;
}

stock GetVehModelPaintjobs(modelid, dest_array[MAX_VEHICLE_PAINTJOBS], &total)
{
    if(modelid >= 400 && modelid <= 611)
    {
        new index = modelid - 400;
        for(new i = 0; i < MAX_VEHICLE_PAINTJOBS; i ++)
        {
            if(VehiclePaintjobsInfo[index][i] == INVALID_PAINTJOB_ID)
            break;

            dest_array[total++] = VehiclePaintjobsInfo[index][i];
        }
        return 1;
    }
    return 0;
}

stock GetVehiclePaintjob(vehicleid)
{
    if(vehicleid >= 0 && vehicleid < MAX_VEHICLES)
    {
        return VehiclePaintjob[vehicleid];
    }
    return INVALID_PAINTJOB_ID;
}


stock AddVehicleMod(vehicleid, componentid)
{
    if(vehicleid >= 0 && vehicleid < MAX_VEHICLES)
    {
        new slot = GetVehComponentType(componentid);
        if(slot != INVALID_VEHMODTYPE)
        {
            if(Iter_Contains(VehicleComponents[vehicleid], slot))
            RemoveVehicleMod(vehicleid, VehicleComponents[vehicleid][slot]);

            VehicleComponents[vehicleid][slot] = componentid;
            Iter_Add(VehicleComponents[vehicleid], slot);

            switch(slot)
            {
                case VEHMODTYPE_FIRE_EXHAUST: VehicleFireEnabled[vehicleid] = true;
                default: AddVehicleComponent(vehicleid, componentid);
            }
            return 1;
        }
    }
    return 1;
}

stock RemoveVehicleMod(vehicleid, componentid)
{
    if(vehicleid >= 0 && vehicleid < MAX_VEHICLES)
    {
        new slot = GetVehComponentType(componentid);
        if(slot != INVALID_VEHMODTYPE)
        {
            if(Iter_Contains(VehicleComponents[vehicleid], slot))
            {
                Iter_Remove(VehicleComponents[vehicleid], slot);
                VehicleComponents[vehicleid][slot] = INVALID_COMPONENT_ID;
                
                switch(slot)
                {
                    case VEHMODTYPE_FIRE_EXHAUST: VehicleFireEnabled[vehicleid] = false;
                    default: RemoveVehicleComponent(vehicleid, componentid);
                }
                return 1;
            }
        }
    }
    return 0;
}

stock CountVehComponents(vehicleid)
{
    if(vehicleid >= 0 && vehicleid < MAX_VEHICLES)
    {
        return Iter_Count(VehicleComponents[vehicleid]);
    }
    return 0;
}

stock GetVehComponentInSlot(vehicleid, slot)
{
    if(vehicleid >= 0 && vehicleid < MAX_VEHICLES)
    {
        if(slot >= 0 && slot <= MAX_COMPONENTS_TYPES)
        {
            if(Iter_Contains(VehicleComponents[vehicleid], slot))
            return VehicleComponents[vehicleid][i];
        }
    }
    return INVALID_COMPONENT_ID;
}

stock GetVehComponents(vehicleid, dest_array[MAX_VEHICLE_COMPONENTS], &total)
{
    if(vehicleid >= 0 && vehicleid < MAX_VEHICLES)
    {
        foreach(new i : VehicleComponents[vehicleid])
        {
            dest_array[total++] = VehicleComponents[vehicleid][i];
        }
        return 1;
    }
    return 0;
}

stock GetVehComponentType(componentid)
{
    new index = componentid - 1000;
    if(index >= 0 && index < sizeof(ComponentInfo))
    {
        return ComponentInfo[index][component_TYPE];
    }
    return INVALID_VEHMODTYPE;
}

stock IsVehModelTuneable(modelid)
{
    if(modelid >= 400 && modelid <= 611)
    {
        new index = modelid - 400;
        if(index >= 0 && index < sizeof(VehicleComponentInfo))
        {
            if(VehicleComponentInfo[index][0] != INVALID_COMPONENT_ID)
            {
                return true;
            }
        }
    }
    return false;
}

stock CountVehModelComponents(modelid)
{
    if(modelid >= 400 && modelid <= 611)
    {
        new index = modelid - 400;
        if(index >= 0 && index < sizeof(VehicleComponentInfo))
        {
            new count;
            for(new i = 0; i < MAX_VEHICLE_COMPONENTS; i ++)
            {
                if(VehicleComponentInfo[index][i] == INVALID_COMPONENT_ID) break;
                count ++;
            }
            return count;
        }
    }
    return 0;
}

stock CountVehModelComponentTypes(modelid)
{
    if(modelid >= 400 && modelid <= 611)
    {
        new index = modelid - 400;
        if(index >= 0 && index < sizeof(VehicleComponentInfo))
        {
            new count, bool:type_checked[MAX_COMPONENTS_TYPES];
            for(new i = 0; i < MAX_VEHICLE_COMPONENTS; i ++)
            {
                if(VehicleComponentInfo[index][i] == INVALID_COMPONENT_ID) break;

                new componentType = ComponentInfo[ VehicleComponentInfo[index][i] - 1000 ][component_TYPE];
                if(type_checked[componentType]) continue;

                type_checked[componentType] = true;
                count ++;
            }
            return count;
        }
    }
    return 0;
}

stock GetVehModelComponents(modelid, dest_array[MAX_VEHICLE_COMPONENTS], &total)
{
    if(modelid >= 400 && modelid <= 611)
    {
        new index = modelid - 400;
        if(index >= 0 && index < sizeof(VehicleComponentInfo))
        {
            for(new i = 0; i < MAX_VEHICLE_COMPONENTS; i ++)
            {
                if(VehicleComponentInfo[index][i] == INVALID_COMPONENT_ID) break;
                dest_array[total++] = VehicleComponentInfo[index][i];
            }
            return 1;
        }
    }
    return 0;
}

stock GetVehModelComponentTypes(modelid, dest_array[MAX_COMPONENTS_TYPES], &total)
{
    if(modelid >= 400 && modelid <= 611)
    {
        new index = modelid - 400;
        if(index >= 0 && index < sizeof(VehicleComponentInfo))
        {
            new bool:type_checked[MAX_COMPONENTS_TYPES];
            for(new i = 0; i < MAX_VEHICLE_COMPONENTS; i ++)
            {
                if(VehicleComponentInfo[index][i] == INVALID_COMPONENT_ID) break;

                new componentType = ComponentInfo[ VehicleComponentInfo[index][i] - 1000 ][component_TYPE];
                if(type_checked[componentType]) continue;

                type_checked[componentType] = true;
                dest_array[total++] = componentType;
            }
            return 1;
        }
    }
    return 0;
}

stock GetVehModelComponentsInType(modelid, type, dest_array[MAX_VEHICLE_COMPONENTS], &total)
{
    if(modelid >= 400 && modelid <= 611)
    {
        new index = modelid - 400;
        if(index >= 0 && index < sizeof(VehicleComponentInfo))
        {
            for(new i = 0; i < MAX_VEHICLE_COMPONENTS; i ++)
            {
                if(VehicleComponentInfo[index][i] == INVALID_COMPONENT_ID) break;
                if(ComponentInfo[ VehicleComponentInfo[index][i] - 1000 ][component_TYPE] == type)
                {
                    dest_array[total++] = VehicleComponentInfo[index][i];
                }
            }
            return 1;
        }
    }
    return 0;
}

/*Fire Exhaust*/
#define Components_PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define Components_RELEASED(%0) (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
hook OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
        new vehicleid = GetPlayerVehicleID(playerid), vehicle_modelid = GetVehicleModel(vehicleid);
        if(VehicleFireEnabled[vehicleid] && FIRE_INFO[vehicle_modelid - 400][fire_VALID])
        {
            if(Components_PRESSED(KEY_SPRINT))
            {
                PKeyFireTime[playerid] = gettime();
            }
            else if(Components_RELEASED(KEY_SPRINT))
            {
                if(gettime() - PKeyFireTime[playerid] > 2)
                {
                    new effect_object = CreateDynamicObject(18695, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), effect_object2 = INVALID_STREAMER_ID;
                    AttachDynamicObjectToVehicle
                    (
                        effect_object, vehicleid, 
                        FIRE_INFO[vehicle_modelid - 400][fire_OFFSET_X], FIRE_INFO[vehicle_modelid - 400][fire_OFFSET_Y], FIRE_INFO[vehicle_modelid - 400][fire_OFFSET_Z],
                        FIRE_INFO[vehicle_modelid - 400][fire_ROT_X], FIRE_INFO[vehicle_modelid - 400][fire_ROT_Y], FIRE_INFO[vehicle_modelid - 400][fire_ROT_Z]
                    );
                    
                    if(FIRE_INFO[vehicle_modelid - 400][fire_MIRROR])
                    {
                        effect_object2 = CreateDynamicObject(18695, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
                        AttachDynamicObjectToVehicle
                        (
                            effect_object2, vehicleid, 
                            -FIRE_INFO[vehicle_modelid - 400][fire_OFFSET_X], FIRE_INFO[vehicle_modelid - 400][fire_OFFSET_Y], FIRE_INFO[vehicle_modelid - 400][fire_OFFSET_Z],
                            FIRE_INFO[vehicle_modelid - 400][fire_ROT_X], -FIRE_INFO[vehicle_modelid - 400][fire_ROT_Y], -FIRE_INFO[vehicle_modelid - 400][fire_ROT_Z]
                        );
                    }
                    
                    PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
                    Streamer_Update(playerid, STREAMER_TYPE_OBJECT);
                    defer DestroyFireExhaustEffect(effect_object, effect_object2);
                }
            }
        }
    }
	return 1;
}

timer DestroyFireExhaustEffect[100](objectid, objectid2)
{
    if(objectid != INVALID_STREAMER_ID) DestroyDynamicObject(objectid);
	if(objectid2 != INVALID_STREAMER_ID) DestroyDynamicObject(objectid2);
}